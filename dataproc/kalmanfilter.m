%% 卡尔曼滤波：二维平面运动单目标跟踪
clc
clear
close all
%% 初始化参数
% 自定义值
X0 = [-100,2,200,20].'; % 自定义初始状态值。默认值：x=-100,vx0 = 2,y0 = 200,vy0 = 20
q = [1e-2 1e-2];        % 自定义预测误差方差。默认值：1e-2
r = [10 10];            % 自定义量测误差方差。默认值：10
dt = 1;                 % 雷达测量时间间隔，默认值：1
T = 100;                % 总量测次数，默认值100次

% 卡尔曼滤波参数
X = zeros(4,T);     % 模拟的目标状态值（认为是目标的真是状态值）
Xk = zeros(4,T);    % 卡尔曼滤波状态值
Z = zeros(2,T);     % 量测值（文档中的z_measure）
Zk = zeros(2,T);    % 卡尔曼滤波后的量测值

% 状态转移矩阵A
A = [1,dt,0,0; 
    0,1,0,0; 
    0,0,1,dt; 
    0,0,0,1];   
% 输入控制矩阵G，（文档中用B表示，为了和带宽的符号B区分，这里用G表示）
G = [0.5*dt^2,0; 
    dt,0; 
    0,0.5*dt^2; 
    0,dt]; 
% 观测矩阵H
H = [1,0,0,0; 
    0,0,1,0];   

% 预测噪声协方差Q
Q = diag(q);
% 观测噪声协方差R
R = diag(r); 

%% 初始化参数
X(:,1) = X0;    % 目标初始位置
Xk(:,1) = X0;   % 初始时刻的卡尔曼滤波状态值，初始值认为是已知的
Z(:,1) = H*X0;  % 观测初始化
Zk(:,1) = H*X0; % 初始时刻的卡尔曼滤波量测值，初始值认为是已知的

% P0=eye(4);   % 初始误差协方差矩阵：单位对角阵
R11=R(1,1); R22=R(2,2); R12=0; R21=0;
P0=[R11     R11/dt       R12     R12/dt;
    R11/dt  2*R11/dt^2   R12/dt  2*R12/dt^2;
    R21     R21/dt       R22     R22/dt;
    R21/dt  2*R21/dt^2   R22/dt  2*R22/dt^2]; % 初始误差协方差矩阵

Pk = P0;
%% 卡尔曼滤波
for k=2:T
    % 目标模拟
    X(:,k) = A*X(:,k-1)+G*sqrtm(Q)*randn(2,1); % 模拟目标真实的状态值，每次状态值都有方差为Q的高速噪声
    Z(:,k) = H*X(:,k)+sqrtm(R)*randn(2,1);     % 模拟目标真实的量测值，每次量测值都有方差为R的高速噪声
    

    % 开始滤波
    Xpred=A*Xk(:,k-1);                      % 第一步：状态值Xpred预测
    Ppred=A*Pk*A'+G*Q*G';                   % 第二部：误差协方差Ppred预测

    K=Ppred*H'/(H*Ppred*H'+R);              % 第三步：求增益K
    Xk(:,k)=Xpred+K*(Z(:,k)-H*Xpred);       % 第四步：状态值更新
    Pk=(eye(4)-K*H)*Ppred;                  % 第五步：Pk更新
    
    Zk(:,k) = H*Xk(:,k);     % 保存卡尔曼滤波后的最优估计
end


%% 绘制轨迹图
% 绘制目标观测轨迹和卡尔曼滤波轨迹
plot(Z(1,:), Z(2,:), 'o-', 'LineWidth', 2);  % 观测X vs 观测Y
hold on;
plot(Zk(1,:), Zk(2,:), '*-', 'LineWidth', 2);  % 滤波后的X vs 滤波后的Y
title('目标观测轨迹和卡尔曼滤波轨迹');
legend('观测轨迹', '卡尔曼滤波轨迹');
xlabel('X坐标');
ylabel('Y坐标');













